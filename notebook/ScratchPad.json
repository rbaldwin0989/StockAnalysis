{
	"name": "ScratchPad",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sp01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "1",
				"spark.autotune.trackingId": "ec1b9472-c195-431f-b55a-e359c9877186"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8471121b-cea6-48d6-a54e-f71f63da15d6/resourceGroups/rg_ovenmitt_prod_centus_01/providers/Microsoft.Synapse/workspaces/ovenmittsynapse01/bigDataPools/sp01",
				"name": "sp01",
				"type": "Spark",
				"endpoint": "https://ovenmittsynapse01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sp01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"MyAPIKey = 'ySU0TYXTGTHAOSSWF'\n",
					"Ticker = 'AAPL'"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# URL for the CSV file\n",
					"CSV_URL = 'https://www.alphavantage.co/query?function=LISTING_STATUS&apikey=ySU0TYXTGTHAOSSWF'\n",
					"\n",
					"# Read CSV using Spark\n",
					"df = spark.read.csv(CSV_URL, header=True, inferSchema= True)\n",
					"\n",
					"# Show the DataFrame\n",
					"df.show()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import csv\n",
					"import requests\n",
					"\n",
					"# Download the CSV file and save it locally\n",
					"CSV_URL = 'https://www.alphavantage.co/query?function=LISTING_STATUS&apikey=ySU0TYXTGTHAOSSWF'\n",
					"local_file_path = 'abfss://analyticsbronze@ovenmittsynapsestorage.dfs.core.windows.net/stocklistings/file.csv'\n",
					"\n",
					"with requests.Session() as s:\n",
					"    download = s.get(CSV_URL)\n",
					"    with open(local_file_path, 'wb') as f:\n",
					"        f.write(download.content)\n",
					"\n",
					"# Read the downloaded CSV file using Spark\n",
					"df = spark.read.csv(local_file_path, header=True)\n",
					"\n",
					"# Show the DataFrame\n",
					"df.show()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import csv\n",
					"import requests\n",
					"from pyspark.sql import SparkSession\n",
					"\n",
					"# URL for the CSV file\n",
					"CSV_URL = 'https://www.alphavantage.co/query?function=LISTING_STATUS&apikey=ySU0TYXTGTHAOSSWF'\n",
					"\n",
					"# Download the CSV file and save it in a Spark DataFrame\n",
					"with requests.Session() as s:\n",
					"    download = s.get(CSV_URL)\n",
					"    decoded_content = download.content.decode('utf-8')\n",
					"    cr = csv.reader(decoded_content.splitlines(), delimiter=',')\n",
					"    data = list(cr)\n",
					"\n",
					"# Extract headers from the first row\n",
					"headers = data[0]\n",
					"\n",
					"# Remove the header row from the data\n",
					"data = data[1:]\n",
					"\n",
					"# Create a Spark DataFrame from the data and specify column names\n",
					"df = spark.createDataFrame(data, schema=headers)\n",
					"\n",
					"# Specify the target directory in Azure Data Lake Storage\n",
					"target_directory = 'abfss://analyticsbronze@ovenmittsynapsestorage.dfs.core.windows.net/stocklistings/'\n",
					"\n",
					"# Write the DataFrame to the distributed file system\n",
					"df.write.mode(\"overwrite\").option(\"header\", \"true\").csv(target_directory)"
				],
				"execution_count": 20
			}
		]
	}
}